name: Deploy to Steam Workshop

on:
  workflow_call:
    inputs:
      steam_config_path:
        description: "Путь к конфигу Steam Workshop для данного мода"
        required: true
        type: string
      lint_workflow_file:
        description: "Имя файла lint workflow"
        required: false
        type: string
        default: "lint_es_mod.yml"
      branch:
        description: "Ветка для проверки статуса lint workflow"
        required: false
        type: string
        default: "main"
      check_lint_status:
        description: "Зависимость деплоя от статуса basic-lint"
        required: false
        type: boolean
        default: true
      sdk_version:
        description: "Версия Ren'Py SDK"
        required: true
        type: string
        default: "8.1.3"
      google_drive_id:
        description: "ID Google Drive архива с Бесконечным летом"
        required: true
        type: string
        default: "1MM3B6VRDXJDwQphj_sWuG8AthqIu8s-y"
      es_ver:
        description: "Версия архива Бесконечного лета для кэширования"
        required: true
        type: string
        default: "1"
    secrets:
      STEAM_SHARED_SECRET:
        description: "Steam Shared Secret"
        required: true
      STEAM_USERNAME:
        description: "Steam Username"
        required: true
      STEAM_PASSWORD:
        description: "Steam Password"
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Checkout scripts
        uses: actions/checkout@v3
        with:
          repository: zImpact/es_mod_workflow
          path: scripts
          sparse-checkout: |
            check_lint_status.sh
            deploy_to_steam.sh

      - name: Check lint status
        if: ${{ inputs.check_lint_status }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          chmod +x ./scripts/check_lint_status.sh
          ./scripts/check_lint_status.sh "${{ inputs.lint_workflow_file }}" "${{ inputs.branch }}" "basic-lint"
      
      - name: Set up cache for SDK
        id: cache-sdk
        uses: actions/cache@v3
        with:
          path: "~/.renpy-sdk"
          key: ${{ runner.os }}-renpy-sdk-${{ inputs.sdk_version }}

      - name: Download Ren'Py SDK
        if: steps.cache-sdk.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.renpy-sdk
          wget -q "https://www.renpy.org/dl/${{ inputs.sdk_version }}/renpy-${{ inputs.sdk_version }}-sdk.tar.bz2"
          tar -xjf "renpy-${{ inputs.sdk_version }}-sdk.tar.bz2" -C ~/.renpy-sdk
          rm "renpy-${{ inputs.sdk_version }}-sdk.tar.bz2"

      - name: Set up cache for Game
        id: cache-game
        uses: actions/cache@v3
        with:
          path: "./game_files"
          key: ${{ runner.os }}-everlasting-summer-${{ inputs.es_ver }}-${{ inputs.google_drive_id }}
      
      - name: Download Everlasting Summer
        if: steps.cache-game.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./game_files
          pip install gdown
          gdown --id "${{ inputs.google_drive_id }}" -O "Everlasting Summer.zip"
          unzip -q "Everlasting Summer.zip" -d "./game_files"
          rm "Everlasting Summer.zip"
      
      - name: Install jq and yq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.30.8/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq
      
      - name: Copy mod files to game directory
        run: |
          PROJECT_NAME=$(yq eval '.project_name' '${{ inputs.steam_config_path }}')
          mkdir -p "./game_files/Everlasting Summer/game/$PROJECT_NAME"
          rsync -av --exclude='game_files' --exclude='.git' . "./game_files/Everlasting Summer/game/$PROJECT_NAME"
      
      - name: Compile Ren'Py scripts
        run: |
          ~/.renpy-sdk/renpy-${{ inputs.sdk_version }}-sdk/renpy.sh "./game_files/Everlasting Summer/game/" compile
      
      - name: Copy compiled files to repository
        run: |
          PROJECT_NAME=$(yq eval '.project_name' '${{ inputs.steam_config_path }}')
          rsync -av "./game_files/Everlasting Summer/game/$PROJECT_NAME/" .

      - name: Install SteamCMD
        uses: CyberAndrii/setup-steamcmd@v1.2.0

      - name: Setup Python and install md2steam
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip
          pip3 install md2steam
        
      - name: Generate Steam Guard 2FA code
        id: steam-2fa
        uses: CyberAndrii/steam-totp@v1.1.0
        with:
          shared_secret: ${{ secrets.STEAM_SHARED_SECRET }}

      - name: Deploy to Steam Workshop
        run: |
          chmod +x ./scripts/deploy_to_steam.sh
          ./scripts/deploy_to_steam.sh "${{ secrets.STEAM_USERNAME }}" "${{ secrets.STEAM_PASSWORD }}" "${{ steps.steam-2fa.outputs.code }}" "${{ inputs.steam_config_path }}"